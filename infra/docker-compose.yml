version: '3.8'

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/rabbitmq-config.env

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/postgres-config.env

  log-service:
    build:
      context: ./../log-service
      dockerfile: ./../log-service/log-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/mongo-config.env
  
  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/mail-config.env
  
  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/rabbitmq-config.env

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./env/postgres-config.env
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  
  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    env_file:
      - ./env/mongo-config.env
    volumes:
      - ./db-data/mongo/:/data/db/
  
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
  
  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/
